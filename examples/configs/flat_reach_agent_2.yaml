name: human
task:
    type: FlatReachingTask
    spec: {}
model:
    planning:
      # for single dimension
      type: DoubleIntegrator
      spec:
          dT: 0.02
          state_component: ['pos', 'vel']
    control:
      type: BallModel
      spec:
          control_input_dim: 2
planner:
    type: CFSPlanner
    spec:
        horizon: 100
        replanning_cycle: 10000 # no re-plan
        state_dimension: 2
        # Q 1.1, 1.2
        viz_CFS_iter: True
        viz_prediction_planning: False
        blackbox_prediction: False
        # Q 2
        # viz_CFS_iter: False
        # viz_prediction_planning: True
        # blackbox_prediction: True
        
        max_prediction_planning_iter: 10

controller:
    type: Controller
    spec:
        feedback_controller: 
          type: NaiveFeedbackController
          spec:
            kp: 1000
            kv: 100
            u_max: [1000, 1000]
        safe_controller: 
            type: UnsafeController
            spec:
                u_max: [40, 5]

estimator:
    type: NaiveEstimator
    spec:
        init_x: [50.0, 20.0, 0.0, 0.0]
        init_variance: [0.01, 0.01, 0.01, 0.01]
        Rww: [0.001, 0.001, 0.001, 0.001]
        Rvv: [0.001, 0.001, 0.001, 0.001]
        alpha_ukf: 1
        kappa_ukf: 0.1
        beta_ukf: 2
        time_sample: 0.01
        kp: 6
        kv: 8
sensors:
-   type: PVSensor
    spec:
        alias: cartesian_sensor
        noise_var: 0.1
-   type: StateSensor
    spec:
        alias: state_sensor
        noise_var: 0.1
-   type: RadarSensor
    spec:
        alias: obstacle_sensor
        noise_var: 0.1
-   type: GoalSensor
    spec:
        alias: goal_sensor
        noise_var: 0.0
-   type: RadioSensor
    spec:
        alias: communication_sensor
