name: human
task:
    type: FlatReachingTask
    spec: {}
model:
    planning:
      # for single dimension
      type: DoubleIntegrator
      spec:
          dT: 0.02
          state_component: ['pos', 'vel']
    control:
      type: BallModel
      spec:
          control_input_dim: 2
      # type: UnicycleModel
      # spec:
      #     control_input_dim: 2
cycle_time: 0.2
planner:
    type: CFSPlanner
    spec:
        horizon: 50
        replanning_cycle: 10
        state_dimension: 2
    # type: NaivePlanner
    # spec:
    #     horizon: 20
    #     replanning_cycle: 10
    #     state_dimension: 2
    #     n_ob: 1
    #     obs_r: 5
controller:
    type: Controller
    spec:
        feedback_controller: 
          type: NaiveFeedbackController
          spec:
            # for naive planner
            # kp: 200
            # kv: 50
            # for integrator planner
            kp: 1000
            kv: 100
            u_max: [1000, 1000]
        safe_controller: 
            type: UnsafeController
            spec:
                u_max: [40, 5]
            # type: SafeSetController
            # spec:
            #   d_min: 15.0
            #   k_v: 5.0
            #   eta: 1
            #   c: 1000
            #   lambd: 1
            #   u_max: [200, 200]

estimator:
    type: NaiveEstimator
    spec:
        init_x: [50.0, 20.0, 0.0, 0.0]
        init_variance: [0.01, 0.01, 0.01, 0.01]
        Rww: [0.001, 0.001, 0.001, 0.001]
        Rvv: [0.001, 0.001, 0.001, 0.001]
        alpha_ukf: 1
        kappa_ukf: 0.1
        beta_ukf: 2
        time_sample: 0.01
        kp: 6
        kv: 8
sensors:
-   type: PVSensor
    spec:
        alias: cartesian_sensor
        noise_var: 0.1
-   type: StateSensor
    spec:
        alias: state_sensor
        noise_var: 0.1
-   type: RadarSensor
    spec:
        alias: obstacle_sensor
        noise_var: 0.1
-   type: GoalSensor
    spec:
        alias: goal_sensor
        noise_var: 0.0
-   type: RadioSensor
    spec:
        alias: communication_sensor
