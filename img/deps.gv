digraph G {
	compound=true rankdir=LR
	subgraph cluster_x {
		x [shape=point style=invis]
		state_x [shape=box]
		cartesian_x [shape=box]
		label=x
	}
	subgraph cluster_goal_x {
		goal_x [shape=point style=invis]
		state_goal_x [shape=box]
		cartesian_goal_x [shape=box]
		label=goal_x
	}
	model [color=lightskyblue fillcolor=lightskyblue shape=box style=filled]
	planner [color=lightskyblue fillcolor=lightskyblue shape=box style=filled]
	controller [color=lightskyblue fillcolor=lightskyblue shape=box style=filled]
	model [shape=box]
	"model.A" [shape=box]
	"model.B" [shape=box]
	controller [shape=box]
	"model.shape_u" [shape=box]
	"evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)" [shape=box]
	planner [shape=box]
	"model.shape_u" [color=pink fillcolor=pink shape=box style=filled]
	x -> controller [color=gray50 ltail=cluster_x]
	goal_x -> controller [color=gray50 ltail=cluster_goal_x]
	"model.shape_u" -> controller [color=gray50]
	"model.A" -> controller [color=gray50]
	"model.B" -> controller [color=gray50]
	"evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)" -> controller [color=gray50]
	"evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)" -> planner [color=gray50]
	"control = controller.control(dt, x, goal_x, est_params)" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	controller -> "control = controller.control(dt, x, goal_x, est_params)" [color=gray50]
	"model.x" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.x" [color=gray50]
	"model.u" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.u" [color=gray50]
	"model.A" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.A" [color=gray50]
	"model.B" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.B" [color=gray50]
	"model.f_expr" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.f_expr" [color=gray50]
	"model.g_expr" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.g_expr" [color=gray50]
	"model.cont_model" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "model.cont_model" [color=gray50]
	"evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)" [color=gray50]
	"evaled = model.evaluate_measurement(x_sub)" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	model -> "evaled = model.evaluate_measurement(x_sub)" [color=gray50]
	state_x [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> state_x [color=gray50]
	cartesian_x [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> cartesian_x [color=gray50]
	state_goal_x [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> state_goal_x [color=gray50]
	cartesian_goal_x [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> cartesian_goal_x [color=gray50]
	"planner.horizon" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> "planner.horizon" [color=gray50]
	"planner.replanning_cycle" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> "planner.replanning_cycle" [color=gray50]
	"planner.planning(dt, goal, agent_state)" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> "planner.planning(dt, goal, agent_state)" [color=gray50]
	"planner.re_planning(dt, goal, agent_state)" [color=peachpuff fillcolor=peachpuff shape=box style=filled]
	planner -> "planner.re_planning(dt, goal, agent_state)" [color=gray50]
	planner -> controller [style=invis]
	model -> controller [style=invis]
	model -> planner [style=invis]
}
