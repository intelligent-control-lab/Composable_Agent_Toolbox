module:
  model
  
class:
  ModelTest:
    requirement:
      module:
      property:
      function:
    public:
      property:
        - model.A

  ModelBase:
    requirement:
      module:
      property:
      function:
    public:
      property:
        - model.x
        - model.u
        - model.A
        - model.B
        # - model.shape_u
        - model.f_expr
        - model.g_expr
        - model.cont_model
      function:
        - evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)
        - evaled = model.evaluate_measurement(x_sub)

  NonlinModelCntlAffine(ModelBase):
    public:
      function:
        - model.linearize_dynamics(x_sub, u_sub)

