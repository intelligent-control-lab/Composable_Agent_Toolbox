module:
  model
  
class:
  AbstractModelBase:
    requirement:
      module:
      property:
      function:
    public:
      property:
      function:

  ModelBase(AbstractModelBase):
    requirement:
      module:
      property:
      function:
    public:
      property:
      function:
        - evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)
        - evaled = model.evaluate_measurement(x_sub)

  NonlinModelCntlAffine(ModelBase):
    requirement:
      module:
      property:
      function:
    public:
      property:
        - model.spec
        - model.x
        - model.shape_x
        - model.state_dict
        - model.state_dec
        - model.u
        - model.shape_u
        - model.cntl_dict
        - model.cntl_dec
        - model.params
        - model.shape_params
        - model.param_dict
        - model.symbol_dict
        - model.all_syms
        - model.f_expr
        - model.g_expr
        - model.cont_model
        - model.cont_model_lam
        - model.measure_func
        - model.measure_func_lam
      function:
        - evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)
        - evaled = model.evaluate_measurement(x_sub)
        - model.linearize_dynamics(x_sub, u_sub)

  LinearModel(ModelBase):
    requirement:
      module:
      property:
      function:
    public:
      property:
        - model.spec
        - model.x
        - model.shape_x
        - model.state_dec
        - model.u
        - model.shape_u
        - model.cntl_dec
        - model.params
        - model.shape_params
        - model.symbol_dict
        - model.all_syms
        - model.A
        - model.B
        - model.cont_model
        - model.cont_model_lam
        - model.measure_func
        - model.measure_func_lam
      function:
        - evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)
        - evaled = model.evaluate_measurement(x_sub)

  ManipulatorEquation(ModelBase):
    requirement:
      module:
      property:
      function:
    public:
      property:
        - model.spec
        - model.x
        - model.shape_x
        - model.state_dict
        - model.state_dec
        - model.u
        - model.shape_u
        - model.cntl_dict
        - model.cntl_dec
        - model.params
        - model.shape_params
        - model.param_dict
        - model.symbol_dict
        - model.all_syms
        - model.h_expr
        - model.c_expr
        - model.g_expr
        - model.cont_model
        - model.cont_model_lam
        - model.measure_func
        - model.measure_func_lam
      function:
        - evaled = model.evaluate_dynamics(x_sub, u_sub, params_sub)
        - evaled = model.evaluate_measurement(x_sub)